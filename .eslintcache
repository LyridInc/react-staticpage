[{"C:\\Users\\hando\\node\\react-staticpage\\src\\index.js":"1","C:\\Users\\hando\\node\\react-staticpage\\src\\helpers\\api.js":"2","C:\\Users\\hando\\node\\react-staticpage\\src\\components\\ImageLoader.js":"3","C:\\Users\\hando\\node\\react-staticpage\\src\\MainApp.js":"4","C:\\Users\\hando\\node\\react-staticpage\\src\\components\\ImageProperties.js":"5","C:\\Users\\hando\\node\\react-staticpage\\src\\components\\TransformControl.js":"6"},{"size":231,"mtime":1609105108227,"results":"7","hashOfConfig":"8"},{"size":414,"mtime":1609171639998,"results":"9","hashOfConfig":"8"},{"size":457,"mtime":1609120490737,"results":"10","hashOfConfig":"8"},{"size":766,"mtime":1609112180249,"results":"11","hashOfConfig":"8"},{"size":1023,"mtime":1609120717623,"results":"12","hashOfConfig":"8"},{"size":4108,"mtime":1609172083797,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ut4tc0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hando\\node\\react-staticpage\\src\\index.js",[],"C:\\Users\\hando\\node\\react-staticpage\\src\\helpers\\api.js",[],"C:\\Users\\hando\\node\\react-staticpage\\src\\components\\ImageLoader.js",["28","29"],"\r\nimport React, { useState, useEffect } from 'react';\r\n// import API from \"../helpers/api\";\r\n\r\n\r\nconst ImageLoader = props => {\r\n    return (\r\n        <div className=\"imageloader\">\r\n            <form>\r\n                <label>\r\n                Image URL:\r\n                <input type=\"text\" value={props.selectedImageUrl} onChange={props.onImageLoad} />\r\n                </label>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLoader;","C:\\Users\\hando\\node\\react-staticpage\\src\\MainApp.js",[],"C:\\Users\\hando\\node\\react-staticpage\\src\\components\\ImageProperties.js",["30","31","32"],"import React, { useState, useEffect} from 'react';\r\n\r\nimport \"./ImageProperties.css\"\r\n\r\nconst ImageProperties = props => {\r\n\r\n    const [loadedImage, setLoadedImage] = useState({});\r\n    const [loadedImageHeight, setLoadedImageHeight] = useState(0);  \r\n    const [loadedImageWidth, setLoadedImageWidth] = useState(0);  \r\n\r\n    const imgElement = React.useRef(null);\r\n\r\n    const handleImgLoad = () => {\r\n        setLoadedImage(imgElement.current);\r\n        setLoadedImageHeight(imgElement.current.naturalHeight);\r\n        setLoadedImageWidth(imgElement.current.naturalWidth);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"imgbox\">\r\n          <img src={props.ImageURL}  ref={imgElement} onLoad={handleImgLoad} />\r\n          <p>\r\n            Height: <span className=\"summary__output\">{loadedImageHeight}</span> pixel\r\n          </p>\r\n          <p>\r\n            Width: <span className=\"summary__output\">{loadedImageWidth}</span> pixel\r\n          </p>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default ImageProperties;","C:\\Users\\hando\\node\\react-staticpage\\src\\components\\TransformControl.js",["33"],{"ruleId":"34","severity":1,"message":"35","line":2,"column":17,"nodeType":"36","messageId":"37","endLine":2,"endColumn":25},{"ruleId":"34","severity":1,"message":"38","line":2,"column":27,"nodeType":"36","messageId":"37","endLine":2,"endColumn":36},{"ruleId":"34","severity":1,"message":"38","line":1,"column":27,"nodeType":"36","messageId":"37","endLine":1,"endColumn":36},{"ruleId":"34","severity":1,"message":"39","line":7,"column":12,"nodeType":"36","messageId":"37","endLine":7,"endColumn":23},{"ruleId":"40","severity":1,"message":"41","line":22,"column":11,"nodeType":"42","endLine":22,"endColumn":80},{"ruleId":"40","severity":1,"message":"41","line":123,"column":13,"nodeType":"42","endLine":123,"endColumn":39},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'loadedImage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]